#BlueJ class context
comment0.params=
comment0.target=ClientNetwork()
comment1.params=c
comment1.target=void\ init(Client)
comment10.params=b\ cl
comment10.target=byte[]\ toBytes(java.awt.image.BufferedImage,\ int)
comment10.text=\n\ Turns\ a\ BufferedImage\ into\ a\ byte\ array.\n\ @param\ cl\ the\ level\ of\ compression;\ 0\ is\ lossless,\ 1\ is\ lossy,\ 2\ is\ very\ lossy\n
comment11.params=b
comment11.target=java.awt.image.BufferedImage\ toImage(byte[])
comment11.text=\n\ Turns\ a\ byte\ array\ into\ a\ BufferedImage.\n
comment12.params=s
comment12.target=void\ addText(java.lang.String)
comment13.params=s\ c
comment13.target=void\ addText(java.lang.String,\ java.awt.Color)
comment14.params=name\ fileContents
comment14.target=void\ addFileInterface(java.lang.String,\ byte[])
comment14.text=\n\ A\ helper\ method\ used\ when\ working\ with\ files.\n
comment15.params=a
comment15.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment16.params=a
comment16.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment17.params=
comment17.target=void\ run()
comment18.params=file\ musicContents
comment18.target=void\ addMusicInterface(java.io.File,\ byte[])
comment18.text=\n\ A\ helper\ method\ for\ working\ with\ music\ files-\ adds\ a\ save\ button\ and\ a\ music\ player\n
comment19.params=a
comment19.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment2.params=
comment2.target=void\ begin()
comment3.params=
comment3.target=boolean\ tryConnectAsClient()
comment3.text=\n\ Try\ to\ connect\ as\ a\ client.\n\ Used\ for\ multiuser\ connections.\n\ @since\ 1.8\n
comment4.params=
comment4.target=void\ tryConnectAsServer()
comment4.text=\n\ Begin\ the\ server\ listener\ thread.\ This\ will\ accept\ any\ new\ clients\ and\ enable\ them\ to\n\ communicate\ with\ anyone\ else.\ This\ is\ used\ for\ multiuser\ connections.\n\ @since\ 1.8\n
comment5.params=
comment5.target=void\ run()
comment6.params=
comment6.target=void\ attemptReconnect()
comment6.text=\n\ Attempts\ to\ re-establish\ a\ connection\ with\ a\ user\ after\ unforseen\ circumstances,\ such\ as\ \n\ an\ internet\ problem\ or\ your\ friend\ disconnecting.\ \n\ <p><p>\n\ This\ method\ is\ NOT\ suitable\ for\ creating\ brand\ new\ connections;\ the\ "/connect"\ command\ \n\ attempted\ to\ use\ this\ method\ and\ had\ many\ problems\ with\ threading.\ The\ proper\ way\ is\ to\ \n\ change\ the\ network\ variables\ as\ needed\ and\ then\ create\ a\ new\ server\ using\ "tryCreateServer()",\n\ and\ finally\ using\ "startListening()"\ to\ begin\ the\ network\ connection.\ \n\ <p><p>\n\ This\ method\ is\ used\ when\ we\ reach\ an\ end-of-stream\ error\ (usually\ means\ friend\ disconnected),\n\ and\ when\ we\ get\ an\ IOException\ (which\ is\ some\ strange\ IO\ error\ that\ reconnection\ fixes\ \n\ often\ enough\ to\ warrent\ trying\ it).\n\ <p>\n\ @deprecated\n
comment7.params=s
comment7.target=void\ send(java.lang.String)
comment7.text=\n\ Sends\ a\ string\ to\ all\ connected\ users.\n\ (Note\:\ Updated\ in\ beta\ 1.8\ to\ reflect\ multi-user\ support)\n\ @since\ beta\ 1.7.3\n
comment8.params=o\ name
comment8.target=void\ send(java.lang.Object,\ java.lang.String)
comment8.text=\n\ Sends\ an\ Object\ over\ the\ network.\n\ (Note\:\ Updated\ in\ beta\ 1.8\ to\ reflect\ multi-user\ support)\n\ @precondition\ The\ Object\ must\ be\ of\ type\:\ File,\ File\ (music),\ BufferedImage\n
comment9.params=
comment9.target=void\ run()
numComments=20
