#BlueJ class context
comment0.params=name
comment0.target=Command(java.lang.String)
comment0.text=\n\ Creates\ a\ new\ Command\ that\ will\ be\ recognized\ by\ the\ ClientParser.\n\ This\ command\ will\ be\ parameterless.\n\ \n\ @param\ name\ The\ name\ of\ the\ command.\ If\ 'name'\ is\ "test",\ for\ example,\ then\n\ \ doing\ the\ command\ '/test'\ inside\ of\ the\ input\ text\ area\ will\ execute\ action().\n
comment1.params=name\ description
comment1.target=Command(java.lang.String,\ java.lang.String)
comment1.text=\n\ Creates\ a\ new\ Command\ that\ will\ be\ recognized\ by\ the\ ClientParser.\n\ This\ command\ will\ be\ parameterless.\n\ \n\ @param\ name\ The\ name\ of\ the\ command.\ If\ 'name'\ is\ "test",\ for\ example,\ then\n\ \ doing\ the\ command\ '/test'\ inside\ of\ the\ input\ text\ area\ will\ execute\ action().\n\ @param\ description\ The\ formal\ description\ of\ the\ command,\ called\ on\ '/help'\ method.\n\ \ The\ recommended\ format\ includes\ information\ on\ usage,\ parameters,\ and\ any\ help\ the\ \n\ \ user\ needs.\n
comment2.params=name\ description\ parameters
comment2.target=Command(java.lang.String,\ java.lang.String,\ java.lang.Object[])
comment2.text=\n\ Creates\ a\ new\ Command\ that\ will\ be\ recognized\ by\ the\ ClientParser.\n\ This\ command\ will\ have\ parameters.\n\ \n\ @param\ name\ The\ name\ of\ the\ command.\ If\ 'name'\ is\ "test",\ for\ example,\ then\n\ \ doing\ the\ command\ '/test'\ inside\ of\ the\ input\ text\ area\ will\ execute\ action().\n\ @param\ description\ The\ formal\ description\ of\ the\ command,\ called\ on\ '/help'\ method.\n\ \ The\ recommended\ format\ includes\ information\ on\ usage,\ parameters,\ and\ any\ help\ the\ \n\ \ user\ needs.\n\ @param\ parameters\ A\ list\ of\ all\ of\ the\ parameters\ this\ command\ takes.\ This\ command\n\ \ will\ then\ expect\ the\ parameters\ to\ follow\ in\ this\ order\ when\ called.\n
comment3.params=name\ description\ para\ runnable
comment3.target=Command(java.lang.String,\ java.lang.String,\ java.lang.Object[],\ DefaultCommandRunnable)
comment3.text=\n\ This\ method\ is\ only\ used\ for\ default\ commands.\ \n
comment4.params=c
comment4.target=void\ init(Client)
comment4.text=\n\ Called\ by\ the\ ClientParser\ class\ to\ initialize\ this\ Command\ with\ any\ variables\ it\ needs\ to\n\ properly\ modify\ the\ program.\ Don't\ worry\ about\ this\ part;\ just\ know\ you\ can\ use\ the\ variables\n\ passed\ inside\ of\ your\ own\ Action.\n
comment5.params=para
comment5.target=void\ execute(java.lang.Object[])
comment5.text=\n\ Execute\ the\ code\ inside\ of\ action,\ or\ run\ runnable.\ This\ code\ is\ run\ on\ another\n\ Thread\ to\ try\ to\ prevent\ the\ user\ from\ hanging\ the\ client\ with\ plugins.\n\ As\ a\ user,\ don't\ worry\ about\ this\ method.\n\ \n\ <p><p>\n\ Please\ try\ to\ be\ civil\ with\ your\ use\ of\ code.\ There\ are\ no\ checks\ in\ place\ on\ code\ passed,\n\ so\ this\ can\ cause\ instability\ on\ both\ your\ client\ and\ friends'\ clients.\ \n
comment6.params=
comment6.target=void\ run()
comment7.params=
comment7.target=void\ action()
comment7.text=\n\ This\ method\ is\ overridden\ by\ the\ code\ you\ provide\ in\ commands.txt.\n\ <p>\n\ By\ default,\ this\ method\ returns\ without\ executing\ any\ code.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Returns\ a\ String\ representation\ of\ this\ Command.\n
numComments=9
