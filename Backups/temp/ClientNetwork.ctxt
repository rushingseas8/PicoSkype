#BlueJ class context
comment0.params=gui\ name\ ip\ port
comment0.target=ClientNetwork(ClientGUI,\ java.lang.String,\ java.lang.String,\ int)
comment1.params=
comment1.target=void\ begin()
comment10.params=b\ cl
comment10.target=byte[]\ toBytes(java.awt.image.BufferedImage,\ int)
comment10.text=\n\ Turns\ a\ BufferedImage\ into\ a\ byte\ array.\n\ @param\ cl\ the\ level\ of\ compression;\ 0\ is\ lossless,\ 1\ is\ lossy,\ 2\ is\ very\ lossy\n
comment11.params=b
comment11.target=java.awt.image.BufferedImage\ toImage(byte[])
comment11.text=\n\ Turns\ a\ byte\ array\ into\ a\ BufferedImage.\n
comment12.params=s
comment12.target=void\ addText(java.lang.String)
comment13.params=s\ c
comment13.target=void\ addText(java.lang.String,\ java.awt.Color)
comment14.params=name\ fileContents
comment14.target=void\ addFileInterface(java.lang.String,\ byte[])
comment14.text=\n\ A\ helper\ method\ used\ when\ working\ with\ files.\n
comment15.params=a
comment15.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment16.params=a
comment16.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment17.params=
comment17.target=void\ run()
comment18.params=c
comment18.target=void\ setClientLogger(ClientLogger)
comment19.params=c
comment19.target=void\ setClientParser(ClientParser)
comment2.params=
comment2.target=void\ tryCreateServer()
comment2.text=\n\ Attempts\ to\ establish\ an\ initial\ connection\ with\ another\ person.\n\ Note\:\ Also\ used\ by\ the\ /connect\ command\ to\ establish\ a\ new\ connection.\n
comment3.params=
comment3.target=void\ setupIO()
comment3.text=\n\ Sets\ up\ the\ input\ and\ output\ streams.\n\ @precondition\ The\ socket\ 'client'\ is\ not\ null\n
comment4.params=
comment4.target=void\ tradeNames()
comment4.text=\n\ A\ handshake\ method.\ Sends\ our\ name\ over\ to\ the\ partner,\ and\ recieves\ partner\ name.\n
comment5.params=
comment5.target=void\ startListening()
comment5.text=\n\ Begin\ listening\ to\ input\ from\ the\ input\ streams.\n\ Note\ that\ this\ method\ will\ also\ restart\ listening\ if\ it\ currently\ is\ listening.k\n
comment6.params=
comment6.target=void\ attemptReconnect()
comment6.text=\n\ Deals\ with\ unplanned\ losses\ of\ connection;\ ie,\ user\ disconnect,\ internet\ down,\ etc.\n
comment7.params=s
comment7.target=void\ sendString(java.lang.String)
comment7.text=\n\ Sends\ a\ string\ over\ to\ the\ other\ person.\n\ All\ errors\ (except\ null)\ are\ on\ you.\n
comment8.params=o\ name
comment8.target=void\ send(java.lang.Object,\ java.lang.String)
comment8.text=\n\ Sends\ an\ Object\ over\ the\ network.\n\ @precondition\ The\ Object\ must\ be\ of\ type\:\ File,\ File\ (music),\ BufferedImage.\n
comment9.params=
comment9.target=void\ read()
comment9.text=\n\ Reads\ in\ an\ Object\ and\ does\ stuff\ with\ it.\n
numComments=20
